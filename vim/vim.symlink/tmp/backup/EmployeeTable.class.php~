<?php

/**
 * EmployeeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EmployeeTable extends Doctrine_Table
{
  public static $user_types = array(
    0 => 'recruit',
    1 => 'employee',
    2 => 'recruiter'
  );

  public static $stages = array(
    1 => "1 – phone interview",
    2 => "2 – first recruitment test",
    3 => "3 – interview",
    4 => "4 – all recruitment tests",
    5 => "5 – 30 day trial period",
    6 => "6 – regular employment"
  );

  public static function getUserTypes(){
    return self::$user_types;
  }
  public static function getStages($empty = false){
    if($empty){
      return array_merge(array(null => $empty), self::$stages);
    }
    return self::$stages;
  }
  /**
   * Returns an instance of this class.
   *
   * @return object EmployeeTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Employee');
  }
  public function findAbsenteeism(){
    $q = $this->createQuery('e')
      ->leftJoin('e.Status s')
      ->where('e.current_stage > 4')
      ->andWhere("(s.status = 'current' OR s.status = 'hiring')")
      ->orderBy('e.absent_days DESC, e.absent_occurences DESC');
    return $q->execute();
  }
  public function findCommentsEmployees($sort = 'valid'){
    $q = $this->createQuery('e')
      ->leftJoin('e.Status s')
      ->where('e.current_stage > 4')
      ->andWhere("(s.status = 'current' OR s.status = 'hiring')");
    if($sort == 'valid'){
      $q->orderBy('e.valid_complains DESC, e.all_complains DESC');
    } else {
      $q->orderBy('e.all_complains DESC, e.valid_complains DESC');
    }
    return $q->execute();
  }
  public function findDamagesEmployees(){
    $q = $this->createQuery('e')
      ->leftJoin('e.Status s')
      ->where('e.current_stage > 4')
      ->andWhere("(s.status = 'current' OR s.status = 'hiring')")
      ->orderBy('e.damages_count DESC,e.damages_cost DESC');
    return $q->execute();
  }
  public function getCurentEmployeesQuery(){
    $q = $this->createQuery('e')
      ->leftJoin('e.Status s')
      ->where('e.current_stage > 4')
      ->andWhere("(s.status = 'current' OR s.status = 'hiring')");
  }
}
