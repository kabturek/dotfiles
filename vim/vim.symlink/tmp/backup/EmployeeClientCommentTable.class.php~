<?php

/**
 * EmployeeClientCommentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EmployeeClientCommentTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EmployeeClientCommentTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EmployeeClientComment');
    }
    public function countValidEmployeeComments($employee_id){
      $from = new DateTime();
      $from->modify('-3 months');
      $q = $this->createQuery('ecc')
        ->leftJoin('ecc.ClientComment c')
        ->where('ecc.employee_id = ?', $employee_id)
        ->andWhere('c.date > ?', $from->format('Y-m-d'))
        ->andWhere('(c.type = ? OR c.type = ?)', array('complaint', 'complaint and praise')) 
        ->andWhere('c.is_valid = ?', true);
      return $q->count();
    }
    public function countAllEmployeeComments($employee_id){
      $from = new DateTime();
      $from->modify('-3 months');
      $q = $this->createQuery('ecc')
        ->leftJoin('ecc.ClientComment c')
        ->where('ecc.employee_id = ?', $employee_id)
        ->andWhere('(c.type = ? OR c.type = ?)', array('complaint', 'complaint and praise')) 
        ->andWhere('c.date > ?', $from->format('Y-m-d'));
      return $q->count();
    }
    public function filterEmployees($filters){
      $q = $this->createQuery('ecc')
        ->leftJoin('ecc.ClientComment c')
        ->leftJoin('ecc.Employee e')
        ->leftJoin('c.ClientCommentAreas a')
        ->select('e.id, e.first_name, e.last_name, e.current_stage, ecc.employee_id, COUNT(ecc.id) AS all_count, SUM(c.is_valid) AS valid_count')
        ->groupBy('ecc.employee_id');
      if(!empty($filters['date_start']['date'])){
        $q->andWhere('c.date >= ?', $filters['date_start']['date']);
      }
      if(!empty($filters['date_stop']['date'])){
        $q->andWhere('c.date <= ?', $filters['date_stop']['date']);
      }
      if(!empty($filters['type'])){
        $q->andWhereIn('c.type', array_values($filters['type']));
      }
      if(isset($filters['is_valid']) && $filters['is_valid'] !== ''){
        $q->andWhere('c.is_valid = ?', $filters['is_valid']);
      }
      if(!empty($filters['subject'])){
        $q->andWhereIn('a.area_id', array_values($filters['subject']));
      }
      if(!empty($filters['sort']) && $filters['sort'] == 'all'){
        $q->orderBy('all_count DESC');
      } else {
        $q->orderBy('valid_count DESC');
      }
      return $q->execute();
    }
}
